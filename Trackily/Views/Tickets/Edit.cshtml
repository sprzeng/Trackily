@model Trackily.Models.View.EditTicketViewModel
@using static Trackily.Models.Domain.Ticket

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="TicketId" />
            <div class="form-group">
                <p><label asp-for="CreatedDate" class="control-label"></label>: @Html.DisplayFor(model => model.CreatedDate)</p>
            </div>
            <div class="form-group">
                <p><label asp-for="UpdatedDate" class="control-label"></label>: @Html.DisplayFor(model => model.UpdatedDate)</p>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <p>
                    <label asp-for="CreatorUserName" class="control-label"></label>:
                    @Html.DisplayFor(model => model.CreatorUserName)
                </p>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" asp-items="Html.GetEnumSelectList<TicketType>()" class="form-control"></select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" asp-items="Html.GetEnumSelectList<TicketStatus>()" class="form-control"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Priority" class="control-label"></label>
                <select asp-for="Priority" asp-items="Html.GetEnumSelectList<TicketPriority>()" class="form-control"></select>
                <span asp-validation-for="Priority" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label" asp-for="Assigned">Remove assigned users</label>
                @foreach (var key in Model.RemoveAssigned.Keys)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="RemoveAssigned[key]" />
                        <label class="form-check-label" asp-for="@key">@key</label>
                    </div>
                }
            </div>
            <div class="form-group">
                <label class="control-label">Assign users</label>
                <table id="formTable">
                    <tbody>
                        <tr>
                            <td><input asp-for="AddAssigned" class="form-control" placeholder="username" /></td>
                        </tr>
                    </tbody>
                </table>
                <a class="btn btn-primary" href="javascript:addRow();" role="button">Add</a>
                <!--Display errors for assigning users.-->
                <ul>
                    @if (Model.Errors != null && Model.Errors.Count > 0)
                    {
                        foreach (string error in Model.Errors)
                        {
                            <li class="text-danger">@error</li>
                        }
                    }
                </ul>
            </div>
            <div class="form-group">
                <label asp-for="IsReviewed" class="control-label"></label>
                <input asp-for="IsReviewed" />
            </div>
            <div class="form-group">
                <label asp-for="IsApproved" class="control-label"></label>
                <input asp-for="IsApproved" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function addRow() {
            //copy the table row and clear the value of the input, then append the row to the end of the table
            $("#formTable tbody tr:first").clone().find("input").each(function () {
                $(this).val('');
            }).end().appendTo("#formTable");
        }
    </script>
}
