@model IEnumerable<Trackily.Models.View.IndexViewModel>
@using Trackily.Models.View
@using System.ComponentModel.DataAnnotations
@using System.Reflection

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<!--
To improve: Use reflection to get all the property names and values and iterate.
However, getting the property name of an enum seems to be more complicated.
See https://stackoverflow.com/questions/14285498/getcustomattribute-returns-null.
Also, getting the value of properties using property.GetValue(item) will not apply
the DisplayFormat attributes (e.g. for DateTime).
    
    Do not show the Edit link on Tickets for which the current user does not have editing privileges.
-->

<div class="row">
    <div class="col">
        <table data-toggle="table"
               class="table table-hover"
               data-search="true"
               data-sort-name="Priority"
               data-sort-order="desc">
            <thead>
                <tr>
                    <th data-halign="center" data-align="center" data-sortable="true">@Html.DisplayNameFor(model => model.Title)</th>
                    <th data-halign="center" data-align="center" data-sortable="true">@Html.DisplayNameFor(model => model.Priority)</th>
                    <th data-halign="center" data-align="center" data-sortable="true">@Html.DisplayNameFor(model => model.Type)</th>
                    <th data-halign="center" data-align="center" data-sortable="true">@Html.DisplayNameFor(model => model.Status)</th>
                    <th data-halign="center" data-align="center" data-sortable="true">@Html.DisplayNameFor(model => model.NumAssignedUsers)</th>
                    <th data-halign="center" data-align="center" data-sortable="true">@Html.DisplayNameFor(model => model.CreatedDate)</th>
                    <th data-halign="center" data-align="center"></th> <!--Column to select options (Edit/Details).-->
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Priority)</td>
                    <td>@Html.DisplayFor(modelItem => item.Type)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>@Html.DisplayFor(modelItem => item.NumAssignedUsers)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    <td>
                        <a creator="item.CreatorUserName" asp-action="Edit" asp-route-id="@item.TicketId">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.TicketId">Details</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
        <a class="btn btn-primary" role="button" asp-action="Create">Create Ticket</a>
    </div>
</div>
